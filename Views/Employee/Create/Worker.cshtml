@using StaffAccounting.Models.Company
@model Worker
@{
    IEnumerable<Rank> orderedRanks =
        ((IQueryable<Rank>)((CompanyContext)ViewData["Company"]).Ranks)
        .OrderBy(rank => rank.Name);
    IEnumerable<Manager> orderedManagers =
        ((IQueryable<Manager>)((CompanyContext)ViewData["Company"]).Managers)
        .OrderBy(manager => manager.LastName);
}

<h2>Рабочий</h2>

<form asp-action="CreateWorker" asp-controller="Employee" asp-route-id="@Model.Id">
    @await Html.PartialAsync("Create/Employee", Model)

    <div class="form-group">
        <label asp-for="ManagerId" class="control-label">Менеджер</label>
        <select id="ManagerId" asp-for="ManagerId" class="form-control">
            <option selected="selected" value=@null>Не выбрано</option>
            @foreach (Manager manager in orderedManagers)
            {
                <option value=@manager.Id>@manager.FullName</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="RankId" class="control-label">Должность</label>
        <select id="RankId" asp-for="RankId" class="form-control">
            <option selected="selected" value=@null>Не выбрано</option>
            @foreach (Rank rank in orderedRanks)
            {
                <option value=@rank.Id>@rank.Name</option>
            }
        </select>
    </div>

    <div class="button-confirm">
        <input type="submit" value="Добавить" class="btn btn-outline-primary" />
    </div>
</form>