@using StaffAccounting.Models.Company
@using StaffAccounting.Models.ViewModels
@using StaffAccounting.Models.ViewModels.StyleProvider
@{
    ViewData["Title"] = "Должности";
    var ranksTask = Model.GetItemsAsync();
}
@model Pagination<Rank>

<table class="table table-striped table-sm">
    <thead>
        <td>Имя</td>
        <td>Действия</td>
    </thead>
    @inject IOptionsStyleProvider optionsStyleProvider
    @{
        int i = 1;
    }
    @foreach (var rank in await ranksTask)
    {
        <tr>
            <td>@rank.Name</td>
            <td>
                <div class="btn-group">
                    <a asp-action="Details" asp-controller="Rank" asp-route-id="@rank.Id"
                        class=@optionsStyleProvider.Details>
                        Подробнее
                    </a>
                    <a asp-action="Edit" asp-controller="Rank" asp-route-id="@rank.Id"
                        class =@optionsStyleProvider.Edit>
                        Изменить
                    </a>
                    <form id=@($"deteleForm{i}") asp-action="Delete" asp-controller="Rank" asp-route-id="@rank.Id">
                        @*
                            such oddity is needed to apply the style. 
                            Otherwise, the optionsStyleProvider.Delete style is not applied
                        *@
                        <a asp-action="" onclick=@($"document.getElementById('deteleForm{i}').submit(); return false;")
                            class=@optionsStyleProvider.Delete>
                            Удалить
                        </a>
                    </form>
                </div>
            </td>
        </tr>

        i++;
        optionsStyleProvider.SetNext();
    }
</table>

<nav>
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a asp-action="Index" asp-route-page="@(Model.PageNumber - 1)"
               class="page-link">
                    <span aria-hidden="true">&laquo;  </span>
                </a>
            </li>
        }
        <li class="page-item">
            <a asp-action="Index" asp-route-page="1"
               class="page-link">
                <span aria-hidden="true">1</span>
            </a>
        </li>
        @if (Model.HasPage(2))
        {
            <li class="page-item">
                <a asp-action="Index" asp-route-page="2"
               class="page-link">
                    <span aria-hidden="true">2</span>
                </a>
            </li>
        }

        @if (Model.TotalPages > 2)
        {
            @if (Model.TotalPages > 3)
            {
                <li class="page-item">
                    <div class="page-link">
                        <span aria-hidden="true">...</span>
                    </div>
                </li>
            }
            <li class="page-item">
                <a asp-action="Index" asp-route-page="@Model.TotalPages"
               class="page-link">
                    <span aria-hidden="true">@Model.TotalPages</span>
                </a>
            </li>
        }
        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a asp-action="Index" asp-route-page="@(Model.PageNumber + 1)"
               class="page-link">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>

<div class="form-inline form-group button-confirm">
    <a asp-action="Create" asp-controller="Rank"
       class="btn btn-outline-dark btn-sm">
        Добавить
    </a>
</div>